<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DavidWang&#39;s Blog</title>
    <description>爱唱歌健身的程序员 | 王伟达，Web &amp; algorithm Lover，Server Enginee | 这里是 @王伟达 的个人博客，期待和你一起学习成长。</description>
    <link>http://DavidWangTM.github.io/</link>
    <atom:link href="http://DavidWangTM.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 31 May 2016 17:23:58 +0800</pubDate>
    <lastBuildDate>Tue, 31 May 2016 17:23:58 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Mac OS 好用的Markdown编辑工具MacDown</title>
        <description>&lt;h1 id=&quot;macdown&quot;&gt;MacDown&lt;/h1&gt;

&lt;p&gt;&lt;img src=&quot;http://macdown.uranusjr.com/static/base/img/logo-160.png&quot; alt=&quot;MacDown logo&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hello there! I’m &lt;strong&gt;MacDown&lt;/strong&gt;, the open source Markdown editor for OS X.&lt;/p&gt;

&lt;p&gt;Let me introduce myself.&lt;/p&gt;

&lt;h2 id=&quot;markdown-and-i&quot;&gt;Markdown and I&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Markdown&lt;/strong&gt; is a plain text formatting syntax created by John Gruber, aiming to provide a easy-to-read and feasible markup. The original Markdown syntax specification can be found &lt;a href=&quot;http://daringfireball.net/projects/markdown/syntax&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MacDown&lt;/strong&gt; is created as a simple-to-use editor for Markdown documents. I render your Markdown contents real-time into HTML, and display them in a preview panel.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://d.pr/i/10UGP+&quot; alt=&quot;MacDown Screenshot&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I support all the original Markdown syntaxes. But I can do so much more! Various popular but non-standard syntaxes can be turned on/off from the &lt;a href=&quot;#markdown-pane&quot;&gt;&lt;strong&gt;Markdown&lt;/strong&gt; preference pane&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can specify extra HTML rendering options through the &lt;a href=&quot;#rendering-pane&quot;&gt;&lt;strong&gt;Rendering&lt;/strong&gt; preference pane&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can customize the editor window to you liking in the &lt;a href=&quot;#editor-pane&quot;&gt;&lt;strong&gt;Editor&lt;/strong&gt; preferences pane&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;You can configure various application (that’s me!) behaviors in the &lt;a href=&quot;#general-pane&quot;&gt;&lt;strong&gt;General&lt;/strong&gt; preference pane&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;the-basics&quot;&gt;The Basics&lt;/h2&gt;
&lt;p&gt;Before I tell you about all the extra syntaxes and capabilities I have, I’ll introduce you to the basics of standard markdown. If you already know markdown, and want to jump straight to learning about the fancier things I can do, I suggest you skip to the &lt;a href=&quot;#markdown-pane&quot;&gt;&lt;strong&gt;Markdown&lt;/strong&gt; preference pane&lt;/a&gt;. Lets jump right in.&lt;/p&gt;

&lt;h3 id=&quot;line-breaks&quot;&gt;Line Breaks&lt;/h3&gt;
&lt;p&gt;To force a line break, put two spaces and a newline (return) at the end of the line.&lt;/p&gt;

&lt;p&gt;These lines
  won’t break&lt;/p&gt;

&lt;p&gt;These lines&lt;br /&gt;
  will break&lt;/p&gt;

&lt;h3 id=&quot;strong-and-emphasize&quot;&gt;Strong and Emphasize&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Strong&lt;/strong&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;**Strong**&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;__Strong__&lt;/code&gt; (Command-B)&lt;br /&gt;
&lt;em&gt;Emphasize&lt;/em&gt;: &lt;code class=&quot;highlighter-rouge&quot;&gt;*Emphasize*&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;_Emphasize_&lt;/code&gt;&lt;sup id=&quot;fnref:emphasize&quot;&gt;&lt;a href=&quot;#fn:emphasize&quot; class=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; (Command-I)&lt;/p&gt;

&lt;h3 id=&quot;headers-like-this-one&quot;&gt;Headers (like this one!)&lt;/h3&gt;

&lt;p&gt;Header 1
  ========&lt;/p&gt;

&lt;p&gt;Header 2
  ——–&lt;/p&gt;

&lt;p&gt;or&lt;/p&gt;

&lt;p&gt;# Header 1
  ## Header 2
  ### Header 3
  #### Header 4
  ##### Header 5
  ###### Header 6&lt;/p&gt;

&lt;h3 id=&quot;links-and-email&quot;&gt;Links and Email&lt;/h3&gt;
&lt;p&gt;#### Inline
Just put angle brackets around an email and it becomes clickable: &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#117;&amp;#114;&amp;#097;&amp;#110;&amp;#117;&amp;#115;&amp;#106;&amp;#114;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;&amp;#117;&amp;#114;&amp;#097;&amp;#110;&amp;#117;&amp;#115;&amp;#106;&amp;#114;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&lt;/a&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;uranusjr@gmail.com&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Same thing with urls: &lt;a href=&quot;http://macdown.uranusjr.com&quot;&gt;http://macdown.uranusjr.com&lt;/a&gt;&lt;br /&gt;
` &lt;a href=&quot;http://macdown.uranusjr.com&quot;&gt;http://macdown.uranusjr.com&lt;/a&gt;`&lt;/p&gt;

&lt;p&gt;Perhaps you want to some link text like this: &lt;a href=&quot;http://macdown.uranusjr.com&quot; title=&quot;Title&quot;&gt;Macdown Website&lt;/a&gt;&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[Macdown Website](http://macdown.uranusjr.com &quot;Title&quot;)&lt;/code&gt; (The title is optional)&lt;/p&gt;

&lt;h4 id=&quot;reference-style&quot;&gt;Reference style&lt;/h4&gt;
&lt;p&gt;Sometimes it looks too messy to include big long urls inline, or you want to keep all your urls together.&lt;/p&gt;

&lt;p&gt;Make &lt;a href=&quot;http://macdown.uranusjr.com&quot; title=&quot;Title&quot;&gt;a link&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;[a link][arbitrary_id]&lt;/code&gt; then on it’s own line anywhere else in the file:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[arbitrary_id]: http://macdown.uranusjr.com &quot;Title&quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If the link text itself would make a good id, you can link &lt;a href=&quot;http://macdown.uranusjr.com&quot;&gt;like this&lt;/a&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;[like this][]&lt;/code&gt;, then on it’s own line anywhere else in the file:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[like this]: http://macdown.uranusjr.com&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;images&quot;&gt;Images&lt;/h3&gt;
&lt;p&gt;#### Inline
&lt;code class=&quot;highlighter-rouge&quot;&gt;![Alt Image Text](path/or/url/to.jpg &quot;Optional Title&quot;)&lt;/code&gt;
#### Reference style
&lt;code class=&quot;highlighter-rouge&quot;&gt;![Alt Image Text][image-id]&lt;/code&gt;&lt;br /&gt;
on it’s own line elsewhere:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;[image-id]: path/or/url/to.jpg &quot;Optional Title&quot;&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;lists&quot;&gt;Lists&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Lists must be preceded by a blank line (or block element)&lt;/li&gt;
  &lt;li&gt;Unordered lists start each item with a &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-&lt;/code&gt; works too
    &lt;ul&gt;
      &lt;li&gt;Indent a level to make a nested list
        &lt;ol&gt;
          &lt;li&gt;Ordered lists are supported.&lt;/li&gt;
          &lt;li&gt;Start each item (number-period-space) like &lt;code class=&quot;highlighter-rouge&quot;&gt;1. &lt;/code&gt;&lt;/li&gt;
          &lt;li&gt;It doesn’t matter what number you use, I will render them sequentially&lt;/li&gt;
          &lt;li&gt;So you might want to start each line with &lt;code class=&quot;highlighter-rouge&quot;&gt;1.&lt;/code&gt; and let me sort it out&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here is the code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* Lists must be preceded by a blank line (or block element)
* Unordered lists start each item with a `*`
- `-` works too
  * Indent a level to make a nested list
    1. Ordered lists are supported.
    2. Start each item (number-period-space) like `1. `
    42. It doesn&#39;t matter what number you use, I will render them sequentially
    1. So you might want to start each line with `1.` and let me sort it out
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;block-quote&quot;&gt;Block Quote&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Angle brackets &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; are used for block quotes.&lt;br /&gt;
Technically not every line needs to start with a &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; as long as
there are no empty lines between paragraphs.&lt;br /&gt;
Looks kinda ugly though.
&amp;gt; Block quotes can be nested.&lt;br /&gt;
&amp;gt; &amp;gt; Multiple Levels&lt;/p&gt;

  &lt;p&gt;Most markdown syntaxes work inside block quotes.&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;Lists&lt;/li&gt;
    &lt;li&gt;&lt;a href=&quot;http://macdown.uranusjr.com&quot; title=&quot;Title&quot;&gt;Links&lt;/a&gt;&lt;/li&gt;
    &lt;li&gt;Etc.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here is the code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; Angle brackets `&amp;gt;` are used for block quotes.  
Technically not every line needs to start with a `&amp;gt;` as long as
there are no empty lines between paragraphs.  
&amp;gt; Looks kinda ugly though.
&amp;gt; &amp;gt; Block quotes can be nested.  
&amp;gt; &amp;gt; &amp;gt; Multiple Levels
&amp;gt;
&amp;gt; Most markdown syntaxes work inside block quotes.
&amp;gt;
&amp;gt; * Lists
&amp;gt; * [Links][arbitrary_id]
&amp;gt; * Etc.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;inline-code&quot;&gt;Inline Code&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Inline code&lt;/code&gt; is indicated by surrounding it with backticks:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;`Inline code`&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If your &lt;code class=&quot;highlighter-rouge&quot;&gt;code has `backticks`&lt;/code&gt; that need to be displayed, you can use double backticks:&lt;br /&gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;``Code with `backticks` ``&lt;/code&gt;  (mind the spaces preceding the final set of backticks)&lt;/p&gt;

&lt;h3 id=&quot;block-code&quot;&gt;Block Code&lt;/h3&gt;
&lt;p&gt;If you indent at least four spaces or one tab, I’ll display a code block.&lt;/p&gt;

&lt;p&gt;print(‘This is a code block’)
  print(‘The block must be preceded by a blank line’)
  print(‘Then indent at least 4 spaces or 1 tab’)
    print(‘Nesting does nothing. Your code is displayed Literally’)&lt;/p&gt;

&lt;p&gt;I also know how to do something called &lt;a href=&quot;#fenced-code-block&quot;&gt;Fenced Code Blocks&lt;/a&gt; which I will tell you about later.&lt;/p&gt;

&lt;h3 id=&quot;horizontal-rules&quot;&gt;Horizontal Rules&lt;/h3&gt;
&lt;p&gt;If you type three asterisks &lt;code class=&quot;highlighter-rouge&quot;&gt;***&lt;/code&gt; or three dashes &lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt; on a line, I’ll display a horizontal rule:&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;a-namemarkdown-paneathe-markdown-preference-pane&quot;&gt;&lt;a name=&quot;markdown-pane&quot;&gt;&lt;/a&gt;The Markdown Preference Pane&lt;/h2&gt;
&lt;p&gt;This is where I keep all preferences related to how I parse markdown into html.&lt;br /&gt;
&lt;img src=&quot;http://d.pr/i/RQEi+&quot; alt=&quot;Markdown preferences pane&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;document-formatting&quot;&gt;Document Formatting&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;&lt;em&gt;Smartypants&lt;/em&gt;&lt;/strong&gt; extension automatically transforms straight quotes (&lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&#39;&lt;/code&gt;) in your text into typographer’s quotes (&lt;code class=&quot;highlighter-rouge&quot;&gt;“&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;”&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;‘&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;’&lt;/code&gt;) according to the context. Very useful if you’re a typography freak like I am. Quote and Smartypants are syntactically incompatible. If both are enabled, Quote takes precedence.&lt;/p&gt;

&lt;h3 id=&quot;block-formatting&quot;&gt;Block Formatting&lt;/h3&gt;

&lt;h4 id=&quot;table&quot;&gt;Table&lt;/h4&gt;

&lt;p&gt;This is a table:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;First Header&lt;/th&gt;
      &lt;th&gt;Second Header&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
      &lt;td&gt;Content Cell&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;You can align cell contents with syntax like this:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Left Aligned&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Center Aligned&lt;/th&gt;
      &lt;th style=&quot;text-align: right&quot;&gt;Right Aligned&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;col 3 is&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;some wordy text&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1600&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;col 2 is&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;centered&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;zebra stripes&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;are neat&lt;/td&gt;
      &lt;td style=&quot;text-align: right&quot;&gt;$1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The left- and right-most pipes (&lt;code class=&quot;highlighter-rouge&quot;&gt;|&lt;/code&gt;) are only aesthetic, and can be omitted. The spaces don’t matter, either. Alignment depends solely on &lt;code class=&quot;highlighter-rouge&quot;&gt;:&lt;/code&gt; marks.&lt;/p&gt;

&lt;h4 id=&quot;a-namefenced-code-blockfenced-code-blocka&quot;&gt;&lt;a name=&quot;fenced-code-block&quot;&gt;Fenced Code Block&lt;/a&gt;&lt;/h4&gt;

&lt;p&gt;This is a fenced code block:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;print(&#39;Hello world!&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can also use waves (&lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt;) instead of back ticks (&lt;code class=&quot;highlighter-rouge&quot;&gt;`&lt;/code&gt;):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;print(&#39;Hello world!&#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can add an optional language ID at the end of the first line. The language ID will only be used to highlight the code inside if you tick the &lt;strong&gt;&lt;em&gt;Enable highlighting in code blocks&lt;/em&gt;&lt;/strong&gt; option. This is what happens if you enable it:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://d.pr/i/9HM6+&quot; alt=&quot;Syntax highlighting example&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I support many popular languages as well as some generic syntax descriptions that can be used if your language of choice is not supported. See &lt;a href=&quot;http://macdown.uranusjr.com/features/&quot;&gt;relevant sections on the official site&lt;/a&gt; for a full list of supported syntaxes.&lt;/p&gt;

&lt;h3 id=&quot;inline-formatting&quot;&gt;Inline Formatting&lt;/h3&gt;

&lt;p&gt;The following is a list of optional inline markups supported:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Option name&lt;/th&gt;
      &lt;th&gt;Markup&lt;/th&gt;
      &lt;th&gt;Result if enabled&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Intra-word emphasis&lt;/td&gt;
      &lt;td&gt;So A*maz*ing&lt;/td&gt;
      &lt;td&gt;So A&lt;em&gt;maz&lt;/em&gt;ing&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Strikethrough&lt;/td&gt;
      &lt;td&gt;~~Much wow~~&lt;/td&gt;
      &lt;td&gt;&lt;del&gt;Much wow&lt;/del&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Underline &lt;sup id=&quot;fnref:under&quot;&gt;&lt;a href=&quot;#fn:under&quot; class=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
      &lt;td&gt;_So doge_&lt;/td&gt;
      &lt;td&gt;&lt;u&gt;So doge&lt;/u&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Quote &lt;sup id=&quot;fnref:quote&quot;&gt;&lt;a href=&quot;#fn:quote&quot; class=&quot;footnote&quot;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/td&gt;
      &lt;td&gt;&quot;Such editor&quot;&lt;/td&gt;
      &lt;td&gt;&lt;q&gt;Such editor&lt;/q&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Highlight&lt;/td&gt;
      &lt;td&gt;==So good==&lt;/td&gt;
      &lt;td&gt;&lt;mark&gt;So good&lt;/mark&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Superscript&lt;/td&gt;
      &lt;td&gt;hoge\^(fuga)&lt;/td&gt;
      &lt;td&gt;hoge&lt;sup&gt;fuga&lt;/sup&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Autolink&lt;/td&gt;
      &lt;td&gt;http://t.co&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;http://t.co&quot;&gt;http://t.co&lt;/a&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Footnotes&lt;/td&gt;
      &lt;td&gt;[\^4] and [\^4]:&lt;/td&gt;
      &lt;td&gt;&lt;sup id=&quot;fnref:4&quot;&gt;&lt;a href=&quot;#fn:4&quot; class=&quot;footnote&quot;&gt;4&lt;/a&gt;&lt;/sup&gt; and footnote 4&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;a-namerendering-paneathe-rendering-preference-pane&quot;&gt;&lt;a name=&quot;rendering-pane&quot;&gt;&lt;/a&gt;The Rendering Preference Pane&lt;/h2&gt;
&lt;p&gt;This is where I keep preferences relating to how I render and style the parsed markdown in the preview window.&lt;br /&gt;
&lt;img src=&quot;http://d.pr/i/rT4d+&quot; alt=&quot;Rendering preferences pane&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;css&quot;&gt;CSS&lt;/h3&gt;
&lt;p&gt;You can choose different css files for me to use to render your html. You can even customize or add your own custom css files.&lt;/p&gt;

&lt;h3 id=&quot;syntax-highlighting&quot;&gt;Syntax Highlighting&lt;/h3&gt;
&lt;p&gt;You have already seen how I can syntax highlight your fenced code blocks. See the &lt;a href=&quot;#fenced-code-block&quot;&gt;Fenced Code Block&lt;/a&gt; section if you haven’t! You can also choose different themes for syntax highlighting.&lt;/p&gt;

&lt;h3 id=&quot;tex-like-math-syntax&quot;&gt;TeX-like Math Syntax&lt;/h3&gt;
&lt;p&gt;I can also render TeX-like math syntaxes, if you allow me to.&lt;sup id=&quot;fnref:math&quot;&gt;&lt;a href=&quot;#fn:math&quot; class=&quot;footnote&quot;&gt;5&lt;/a&gt;&lt;/sup&gt; I can do inline math like this: \( 1 + 1 \) or this (in MathML): &lt;math&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/math&gt;, and block math:&lt;/p&gt;

&lt;p&gt;\[
    A^T_S = B
\]&lt;/p&gt;

&lt;p&gt;or (in MathML)&lt;/p&gt;

&lt;math display=&quot;block&quot;&gt;
    &lt;msubsup&gt;&lt;mi&gt;A&lt;/mi&gt; &lt;mi&gt;S&lt;/mi&gt; &lt;mi&gt;T&lt;/mi&gt;&lt;/msubsup&gt;
    &lt;mo&gt;=&lt;/mo&gt;
    &lt;mi&gt;B&lt;/mi&gt;
&lt;/math&gt;

&lt;h3 id=&quot;task-list-syntax&quot;&gt;Task List Syntax&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;[x] I can render checkbox list syntax
    &lt;ul&gt;
      &lt;li&gt;[x] I support nesting&lt;/li&gt;
      &lt;li&gt;[x] I support ordered &lt;em&gt;and&lt;/em&gt; unordered lists&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;[ ] I don’t support clicking checkboxes directly in the html window&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;jekyll-front-matter&quot;&gt;Jekyll front-matter&lt;/h3&gt;
&lt;p&gt;If you like, I can display Jekyll front-matter in a nice table. Just make sure you put the front-matter at the very beginning of the file, and fence it with &lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt;. For example:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
title: &quot;Macdown is my friend&quot;
date: 2014-06-06 20:00:00
---
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;render-newline-literally&quot;&gt;Render newline literally&lt;/h3&gt;
&lt;p&gt;Normally I require you to put two spaces and a newline (aka return) at the end of a line in order to create a line break. If you like, I can render a newline any time you end a line with a newline. However, if you enable this, markdown that looks lovely when I render it might look pretty funky when you let some &lt;em&gt;other&lt;/em&gt; program render it.&lt;/p&gt;

&lt;h2 id=&quot;a-namegeneral-paneathe-general-preferences-pane&quot;&gt;&lt;a name=&quot;general-pane&quot;&gt;&lt;/a&gt;The General Preferences Pane&lt;/h2&gt;

&lt;p&gt;This is where I keep preferences related to application behavior.&lt;br /&gt;
&lt;img src=&quot;http://d.pr/i/rvwu+&quot; alt=&quot;General preferences pane&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The General Preferences Pane allows you to tell me how you want me to behave. For example, do you want me to make sure there is a document open when I launch? You can also tell me if I should constantly update the preview window as you type, or wait for you to hit &lt;code class=&quot;highlighter-rouge&quot;&gt;command-R&lt;/code&gt; instead. Maybe you prefer your editor window on the right? Or to see the word-count as you type. This is also the place to tell me if you are interested in pre-releases of me, or just want to stick to better-tested official releases.&lt;/p&gt;

&lt;h2 id=&quot;a-nameeditor-paneathe-editor-preference-pane&quot;&gt;&lt;a name=&quot;editor-pane&quot;&gt;&lt;/a&gt;The Editor Preference Pane&lt;/h2&gt;
&lt;p&gt;This is where I keep preferences related to the behavior and styling of the editing window.&lt;br /&gt;
&lt;img src=&quot;http://d.pr/i/6OL5+&quot; alt=&quot;Editor preferences pane&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;styling&quot;&gt;Styling&lt;/h3&gt;

&lt;p&gt;My editor provides syntax highlighting. You can edit the base font and the coloring/sizing theme. I provided some default themes (courtesy of &lt;a href=&quot;http://mouapp.com&quot;&gt;Mou&lt;/a&gt;’s creator, Chen Luo) if you don’t know where to start.&lt;/p&gt;

&lt;p&gt;You can also edit, or even add new themes if you want to! Just click the &lt;strong&gt;&lt;em&gt;Reveal&lt;/em&gt;&lt;/strong&gt; button, and start moving things around. Remember to use the correct file extension (&lt;code class=&quot;highlighter-rouge&quot;&gt;.styles&lt;/code&gt;), though. I’m picky about that.&lt;/p&gt;

&lt;p&gt;I offer auto-completion and other functions to ease your editing experience. If you don’t like it, however, you can turn them off.&lt;/p&gt;

&lt;h2 id=&quot;hack-on&quot;&gt;Hack On&lt;/h2&gt;

&lt;p&gt;That’s about it. Thanks for listening. I’ll be quiet from now on (unless there’s an update about the app—I’ll remind you for that!).&lt;/p&gt;

&lt;p&gt;Happy writing!&lt;/p&gt;

&lt;div class=&quot;footnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:emphasize&quot;&gt;
      &lt;p&gt;If &lt;strong&gt;Underlines&lt;/strong&gt; is turned on, &lt;code class=&quot;highlighter-rouge&quot;&gt;_this notation_&lt;/code&gt; will render as underlined instead of emphasized &lt;a href=&quot;#fnref:emphasize&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:under&quot;&gt;
      &lt;p&gt;If &lt;strong&gt;Underline&lt;/strong&gt; is disabled &lt;code class=&quot;highlighter-rouge&quot;&gt;_this_&lt;/code&gt; will be rendered as &lt;em&gt;emphasized&lt;/em&gt; instead of being underlined. &lt;a href=&quot;#fnref:under&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:quote&quot;&gt;
      &lt;p&gt;&lt;strong&gt;Quote&lt;/strong&gt; replaces literal &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;&lt;/code&gt; characters with html &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;q&amp;gt;&lt;/code&gt; tags. &lt;strong&gt;Quote&lt;/strong&gt; and &lt;strong&gt;Smartypants&lt;/strong&gt; are syntactically incompatible. If both are enabled, &lt;strong&gt;Quote&lt;/strong&gt; takes precedence. Note that &lt;strong&gt;Quote&lt;/strong&gt; is different from &lt;em&gt;blockquote&lt;/em&gt;, which is part of standard Markdown. &lt;a href=&quot;#fnref:quote&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:4&quot;&gt;
      &lt;p&gt;You don’t have to use a number. Arbitrary things like &lt;code class=&quot;highlighter-rouge&quot;&gt;[^footy note4]&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;[^footy note4]:&lt;/code&gt; will also work. But they will &lt;em&gt;render&lt;/em&gt; as numbered footnotes. Also, no need to keep your footnotes in order, I will sort out the order for you so they appear in the same order they were referenced in the text body. You can even keep some footnotes near where you referenced them, and collect others at the bottom of the file in the traditional place for footnotes. &lt;a href=&quot;#fnref:4&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:math&quot;&gt;
      &lt;p&gt;Internet connection required. &lt;a href=&quot;#fnref:math&quot; class=&quot;reversefootnote&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 30 May 2016 22:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/05/30/mac_os_markdown_user_macdown/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/05/30/mac_os_markdown_user_macdown/</guid>
        
        <category>Markdown</category>
        
        <category>MacOS</category>
        
        
      </item>
    
      <item>
        <title>Leetcode Maximum Product of Word Lengths</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“&lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt;是一个强大的OJ网站，很多公司的面试题目都可以在这里找到”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section&quot;&gt;题目&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Given a string array words, find the maximum value of length(word[i]) * length(word[j])
where the two words do not share common letters. You may assume that each word will
contain only lower case letters. If no such two words exist, return 0.

Example 1:
Given [&quot;abcw&quot;, &quot;baz&quot;, &quot;foo&quot;, &quot;bar&quot;, &quot;xtfn&quot;, &quot;abcdef&quot;]
Return 16
The two words can be &quot;abcw&quot;, &quot;xtfn&quot;.

Example 2:
Given [&quot;a&quot;, &quot;ab&quot;, &quot;abc&quot;, &quot;d&quot;, &quot;cd&quot;, &quot;bcd&quot;, &quot;abcd&quot;]
Return 4
The two words can be &quot;ab&quot;, &quot;cd&quot;.

Example 3:
Given [&quot;a&quot;, &quot;aa&quot;, &quot;aaa&quot;, &quot;aaaa&quot;]
Return 0
No such pair of words.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;翻译&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;给定一个string数组words，找出没有重复字母的最大length(word[i]) * length(word[j])。
你可以假设每个单词只有小写字母，如果没有这样的两个单词，返回0.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;tags&quot;&gt;Tags&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Bit Manipulation&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;代码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java:

public int maxProduct(String[] words) {
    int max = 0;
    int length = words.length;
    int[] wordList = new int[length];
    for(int i = 0; i &amp;lt; length; i++)
        for(char chr: words[i].toCharArray())
            wordList[i] |= 1 &amp;lt;&amp;lt; (int)(chr - &#39;a&#39;);

    for(int i = 0; i &amp;lt; length; i++){
        for(int j = i + 1; j &amp;lt; length; j++){
            if((wordList[i] &amp;amp; wordList[j]) == 0)
                max = Math.max(max, words[i].length() * words[j].length());
        }
    }

    return max;
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;讲解&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;int类型有32位，小写字母只有26位，所以可以用一个int型存储所有小写字母，然后通过与操作可以知道两个
单词是否有重复，进而可以算出长度积的最大值。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;习题地址&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/maximum-product-of-word-lengths/&quot; target=&quot;_blank&quot;&gt;Maximum Product of Word Lengths &lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 19 Apr 2016 20:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/04/19/leetcode_318_medium_maximum_product_of_word_length/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/04/19/leetcode_318_medium_maximum_product_of_word_length/</guid>
        
        <category>Leetcode</category>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>Leetcode First Missing Positive</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“&lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt;是一个强大的OJ网站，很多公司的面试题目都可以在这里找到”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section&quot;&gt;题目&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;翻译&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;给定一个未排序的整数数组，找出第一个缺失的正整数。

例如
给出数组[1,2,0]，返回3
给出数组[3,4,-1,1]，返回2

你的算法时间复杂度应该是O(n)，并且只使用常数大小的空间
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;tags&quot;&gt;Tags&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;代码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java:

public int firstMissingPositive(int[] nums) {

    int i = 0, n = nums.length;
    while (i &amp;lt; n) {
        // If the current value is in the range of (0,length) and it&#39;s not at its correct position,
        // swap it to its correct position.
        // Else just continue;
        if (nums[i] &amp;gt;= 0 &amp;amp;&amp;amp; nums[i] &amp;lt; n &amp;amp;&amp;amp; nums[nums[i]] != nums[i])
            swap(nums, i, nums[i]);
        else
            i++;
    }
    int k = 1;

    // Check from k=1 to see whether each index and value can be corresponding.
    while (k &amp;lt; n &amp;amp;&amp;amp; nums[k] == k)
        k++;

    // If it breaks because of empty array or reaching the end. K must be the first missing number.
    if (n == 0 || k &amp;lt; n)
        return k;
    else   // If k is hiding at position 0, K+1 is the number.
        return nums[0] == k ? k + 1 : k;

}

private void swap(int[] nums, int i, int j) {
    int temp = nums[i];
    nums[i] = nums[j];
    nums[j] = temp;
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;讲解&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;将数组中每个数字放到他应该存在的位置上，如果该位置不是它本身，则说明该位置是缺失的第一个正整数，
如果从1循环到结尾，每个数字都是对应的，说明第0位或者k就是缺失的第一个正整数了。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;习题地址&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/first-missing-positive/&quot; target=&quot;_blank&quot;&gt;First Missing Positive&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 18 Apr 2016 20:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/04/18/leetcode_41_hard_first_missing_positive/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/04/18/leetcode_41_hard_first_missing_positive/</guid>
        
        <category>Leetcode</category>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>Leetcode Find the Duplicate Number</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“&lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt;是一个强大的OJ网站，很多公司的面试题目都可以在这里找到”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section&quot;&gt;题目&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Given an array nums containing n + 1 integers where each integer is between 1
and n (inclusive), prove that at least one duplicate number must exist.
Assume that there is only one duplicate number, find the duplicate one.

Note:
You must not modify the array (assume the array is read only).
You must use only constant, O(1) extra space.
Your runtime complexity should be less than O(n²).
There is only one duplicate number in the array,
but it could be repeated more than once.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;翻译&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;给定一个包含n+1个整数的nums数组，每个数字都是从1到n（包括n），则一定有一个重复的数字存在。
假设只有一个重复的数字，找出这个数字。

注意：
你不能改变数组结构（假设数组是只读的）。
你只能使用O(1)的空间。
时间复杂度必须小于O(n²)。
只有一个重复的数字，但是这个数字可以重复出现多次。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;tags&quot;&gt;Tags&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Two Pointers&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Binary Search&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;代码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java:

public int findDuplicate(int[] nums) {
    int length = nums.length;
    if(length &amp;lt; 1) return -1;
    int low = 1, high = length, count, mid;
    while(low &amp;lt; high){
        count = 0;
        mid = low + (high - low) / 2;
        for(int num: nums)
            if(num &amp;lt;= mid)
                count++;
        if(count &amp;gt; mid)
            high = mid;
        else
            low = mid + 1;
    }

    return low;
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;讲解&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;数组中的数字是从1到n的，且只有一个数字是重复的。
取mid = n/2作为中间数，若比mid小的数超过一半，说明重复的数字在[1, mid]中，
同理，若比mid大的数超过一半，说明重复的数字在(mid, n]中，
以上述过程作为判断条件则可找出重复的数字。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;习题地址&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/find-the-duplicate-number/&quot; target=&quot;_blank&quot;&gt;Find the Duplicate Number&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Apr 2016 20:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/04/14/leetcode_287_hard_find_the_duplicate_number/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/04/14/leetcode_287_hard_find_the_duplicate_number/</guid>
        
        <category>Leetcode</category>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>Leetcode Missing Number</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“&lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt;是一个强大的OJ网站，很多公司的面试题目都可以在这里找到”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section&quot;&gt;题目&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Given an array containing n distinct numbers taken from 0, 1, 2, ..., n, find the one
that is missing from the array.

For example,
Given nums = [0, 1, 3] return 2.
Given nums = [3, 2, 0] return 1.

Note:
Your algorithm should run in linear runtime complexity. Could you implement it using
only constant extra space complexity?
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;翻译&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;给定一个包含了n个唯一数字的数组，n的取值是从0到n，找出这个数组缺失的数字。

例如，
给定数组 nums = [0, 1, 3] 返回 2。
给定数组 nums = [3, 2, 0] 返回 1。

注意：
你的算法应该是线性时间复杂度。你能够只使用常数空间复杂度的空间来完成这个题目吗？
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;tags&quot;&gt;Tags&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Math&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Bit Manipulation&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;代码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java:

public int missingNumber(int[] nums) {
    int sum1 = 0, sum2 = 0, length = nums.length;
    for(int i = 0; i &amp;lt; length; i++){
        sum1 += i;
        sum2 += nums[i];
    }
    return Math.abs(sum2 - sum1 - length);
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;讲解&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;因为数组是有序的，所以我们可以通过计算数据元素下标和元素值的差值得出缺失数据相对于数组最大数字侧
的距离。
例如，
nums = [0,1,2,3,5,6]，其下标和为0+1+2+3+4+5 = 15，其元素和为17，则缺失数据距离右侧距离
为2，缺失的数据应该为nums.length - 2 = 6 - 2 = 4。
nums = [5,4,3,2,0],其下标和为0+1+2+3+4 = 10，其元素和为14，则缺失数据距离左侧距离为4，
缺失的数据应该为nums.length - 4 = 5 - 4 = 1。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;习题地址&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/missing-number/&quot; target=&quot;_blank&quot;&gt;Missing Number&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Apr 2016 22:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/04/13/leetcode_268_medium_missing_number/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/04/13/leetcode_268_medium_missing_number/</guid>
        
        <category>Leetcode</category>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>Leetcode Happy Number</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“&lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt;是一个强大的OJ网站，很多公司的面试题目都可以在这里找到”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section&quot;&gt;题目&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Write an algorithm to determine if a number is &quot;happy&quot;.

A happy number is a number defined by the following process:
Starting with any positive integer, replace the number by the sum of the squares
of its digits, and repeat the process until the number equals 1 (where it will stay),
or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy numbers.

Example: 19 is a happy number

1² + 9² = 82
8² + 2² = 68
6² + 8² = 100
1² + 0² + 0² = 1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;翻译&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;写一个算法判断一个数是否为“happy”的。
一个happy number由下列程序进行判断：
初始为一个正整数，用这个正整数的每一位数字的平方和代替原数，
重复这个做法直到数字为1，或者进入一个不为1的无限循环。
最后能够达到1的数字就是happy number。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;tags&quot;&gt;Tags&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Hash Table&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Math&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;代码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java Math：

public boolean isHappy(int n) {
    if(n == 0) return false;
    int sum = 0, tmp = 0;
    while(n != 1){
        sum = 0;
        tmp = n;
        while(tmp &amp;gt; 0){
            sum += Math.pow(tmp % 10, 2);
            tmp /= 10;
        }
        n = sum;
        if(n &amp;lt; 10 &amp;amp;&amp;amp; n != 1 &amp;amp;&amp;amp; n != 7)
            return false;
    }
    return true;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java Hash Table:

public boolean isHappy(int n) {
    if(n == 0) return false;
    HashSet&amp;lt;Integer&amp;gt; hashSet = new HashSet&amp;lt;&amp;gt;();
    int sum = 0, tmp = 0;;
    while(n != 1 &amp;amp;&amp;amp; n != 7){
        sum = 0;
        tmp = n;
        while(tmp &amp;gt; 0){
            sum += Math.pow(tmp % 10, 2);
            tmp /= 10;
        }
        n = sum;
        if(hashSet.contains(n)) return false;
        hashSet.add(n);
    }
    return true;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;讲解&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;很容易的我们可以推断出，如果一个数为个位数，则只有1和7才是happy number，而任何数字经过有限次
的转换一定会变成个位数，如果变成的个位数不为1和7，则不是happy number，反之则是。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;习题地址&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/happy-number/&quot; target=&quot;_blank&quot;&gt;Happy Number&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Apr 2016 21:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/04/13/leetcode_202_easy_happy_number/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/04/13/leetcode_202_easy_happy_number/</guid>
        
        <category>Leetcode</category>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>Leetcode Bulb Switcher</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“&lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt;是一个强大的OJ网站，很多公司的面试题目都可以在这里找到”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section&quot;&gt;题目&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;There are n bulbs that are initially off. You first turn on all the bulbs.
Then, you turn off every second bulb. On the third round, you toggle every
third bulb (turning on if it&#39;s off or turning off if it&#39;s on).
For the ith round, you toggle every i bulb.
For the nth round, you only toggle the last bulb.
Find how many bulbs are on after n rounds.

Example:

Given n = 3.

At first, the three bulbs are [off, off, off].
After first round, the three bulbs are [on, on, on].
After second round, the three bulbs are [on, off, on].
After third round, the three bulbs are [on, off, off].

So you should return 1, because there is only one bulb is on.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;翻译&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;有n个初始状态为关的灯泡。
首先，你打开全部灯泡。
然后每两个灯泡关闭一个。
第三轮每隔三个灯泡切换一次开关（关的打开，开的关闭）。
第i轮，每隔i个灯泡切换一次开关。
第n轮，切换第n个开关。
找出n轮之后又多少个灯泡还亮着。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;tags&quot;&gt;Tags&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Math&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Brainteaser&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;代码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java:

public int bulbSwitch(int n) {
    return (int)Math.sqrt(n);
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;讲解&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;很容易的我们可以推断出，如果一个灯泡被切换了偶数次，他最后一定是关闭的。
同理，如果一个灯泡被切换了奇数次，他最后一定是开启的。
对于第i个灯泡，如果他不是一个完全平方数，那他一定有偶数个因子，也就是说他会被切换偶数次。
比如6（1，2，3，6），18（1，2，3，6，9，18）等。
如果他是一个完全平方数，则他只有奇数个因子，也就是说他会被切换奇数次。
比如9（1，3，9），36（1，6，36）等。
即最后开启的灯泡数为n中完全平方数的个数。
我们只需要找出n中有多少个完全平方数即可，而不超过n的完全平方数个数等于不超过n的最大完全平方数的平方根。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;习题地址&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/bulb-switcher/&quot; target=&quot;_blank&quot;&gt;Bulb Switcher&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 13 Apr 2016 20:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/04/13/leetcode_319_medium_bulb_switcher/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/04/13/leetcode_319_medium_bulb_switcher/</guid>
        
        <category>Leetcode</category>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>Leetcode Product of Array Except Self</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“&lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt;是一个强大的OJ网站，很多公司的面试题目都可以在这里找到”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section&quot;&gt;题目&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Given an array of n integers where n &amp;gt; 1, nums, return an array output such that
 output[i] is equal to the product of all the elements of nums except nums[i].

Solve it without division and in O(n).

For example, given [1,2,3,4], return [24,12,8,6].

Follow up:
Could you solve it with constant space complexity? (Note: The output array does
    not count as extra space for the purpose of space complexity analysis.)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;翻译&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;给定一个含有n（n &amp;gt; 1)个整数的nums数组，返回一个output数组，其中output[i]的值等于nums数组中
除nums[i]的所有数的乘积。

在O(n)时间复杂度内解决问题，不能使用除法。

例子：给出数组[1,2,3,4], 返回数组[24,12,8,6]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;tags&quot;&gt;Tags&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Array&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;代码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java：

public int[] productExceptSelf(int[] nums) {
    int length = nums.length;
    if(length == 0) return new int[0];
    int[] result = new int[length];
    int tmp = 1;
    for(int i = 0; i &amp;lt; length; i++){
        result[i] = tmp;
        tmp *= nums[i];
    }

    tmp = 1;
    for(int i = length - 1; i &amp;gt;= 0; i--){
        result[i] *= tmp;
        tmp *= nums[i];
    }
    return result;
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;讲解&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;首先构造一个前乘数组result，result中的每一个值result[i]都是nums中0到i-1的所有数的乘积。
然后利用前乘数组构造一个后乘数组，result中的每一个值result[i]都是其与nums中length-1到i+1的乘积。

例子：
[2, 5, 7, 1]
前乘数组：[1, 2, 10, 70]
后乘数组：[35, 14, 10, 70]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;习题地址&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/product-of-array-except-self/&quot; target=&quot;_blank&quot;&gt;Product of Array Except Self&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Apr 2016 22:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/04/12/leetcode_238_medium_product_of_array_except_self/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/04/12/leetcode_238_medium_product_of_array_except_self/</guid>
        
        <category>Leetcode</category>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>Leetcode Counting Bits</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“&lt;a href=&quot;https://leetcode.com/&quot;&gt;Leetcode&lt;/a&gt;是一个强大的OJ网站，很多公司的面试题目都可以在这里找到”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;section&quot;&gt;题目&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Given a non negative integer number num. For every numbers i in the
range 0 ≤ i ≤ num calculate the number of 1&#39;s in their binary representation
and return them as an array.

Example:
For num = 5 you should return [0,1,1,2,1,2].

Follow up:

It is very easy to come up with a solution with run time O(n*sizeof(integer)).
But can you do it in linear time O(n) /possibly in a single pass?
Space complexity should be O(n).
Can you do it like a boss? Do it without using any builtin function
like __builtin_popcount in c++ or in any other language.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-1&quot;&gt;翻译&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;给定一个非负整数num，针对每一个0 ≤ i ≤ num的i，计算i的二进制表示中含有的1的数量，返回一个数组。

样例：
如果num = 5，你应该返回[0,1,1,2,1,2]。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-2&quot;&gt;提示&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. You should make use of what you have produced already.
2. Divide the numbers in ranges like [2-3], [4-7], [8-15] and so on. And try to generate new range from previous.
3. Or does the odd/even status of the number help you in calculating the number of 1s?

1. 你可以利用已经生成的数据。
2. 将数据分成像[2-3], [4-7], [8-15]的部分。试着利用旧的数据生成新的数据。
3. 计算1的个数的过程中，数字的奇偶性能否提供帮助？
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;tags&quot;&gt;Tags&lt;/h4&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Dynamic Programming&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;Bit Manipulation&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;代码&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Java：

public int[] countBits(int num) {
    if(num &amp;lt; 0) return new int[]{0};
    int[] result = new int[num + 1];
    result[0] = 0;
    if(num &amp;gt; 0)
        result[1] = 1;
    for(int i = 2; i &amp;lt; num + 1; i++)
        result[i] = result[i&amp;gt;&amp;gt;1] + result[i&amp;amp;1];
    return result;
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-4&quot;&gt;讲解&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;每个数字的二进制1的个数相当于他右移一位的数字的1的个数加上其二进制表示的最左端数字
举例：
5： 101
10： 1010 右移一位为101，加上0，为2个
11： 1011 右移一位为101，加上1，为3个
23： 10111 右移一位为1011，加上1，为4个
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;section-5&quot;&gt;习题地址&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://leetcode.com/problems/counting-bits/&quot; target=&quot;_blank&quot;&gt;Counting Bits&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Apr 2016 21:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/04/12/leetcode_338_medium_counting_bits/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/04/12/leetcode_338_medium_counting_bits/</guid>
        
        <category>Leetcode</category>
        
        <category>Algorithm</category>
        
        
      </item>
    
      <item>
        <title>使用IDEA和gradle搭建Spring MVC和MyBatis开发环境</title>
        <description>&lt;blockquote&gt;
  &lt;p&gt;“IDEA是jetbrains公司开发的Java开发IDE，功能齐全。使用IDEA搭建SSM开发环境简单有效。”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section&quot;&gt;1. 概述&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://gradle.org/&quot;&gt;Gradle&lt;/a&gt;是一个基于Apache Ant和Apache Maven概念的项目自动化建构工具。
它使用一种基于Groovy的特定领域语言(DSL)来声明项目设置，抛弃了基于XML的各种繁琐配置。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://spring.io/&quot;&gt;Spring MVC&lt;/a&gt;属于SpringFrameWork的后续产品，已经融合
在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://blog.mybatis.org/&quot;&gt;MyBatis&lt;/a&gt;本是apache的一个开源项目iBatis, 2010年这个项目
由apache software foundation 迁移到了google code，并且改名为MyBatis 。
2013年11月迁移到Github。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;2. 准备工作&lt;/h3&gt;

&lt;p&gt;1.安装mysql，并完成相应数据库的建立&lt;/p&gt;

&lt;p&gt;2.安装IDEA完整版&lt;/p&gt;

&lt;p&gt;3.下载tomcat或其他服务器&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;3. 创建工程&lt;/h3&gt;

&lt;p&gt;打开&lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IDEA&lt;/a&gt;软件，选择Create New Project：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/start.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择创建基于gradle的java web项目：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/selectGradle.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;输入GroupId和ArtifactId：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/groupAndArtifact.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择gradle的来源，可以用自己下载的gradle，也可以使用IDEA内建的gradle版本：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/gradleSource.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择项目的目录：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/projectLocation.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击完成，会生成一个最基本的java web目录，增加文件夹和相应文件，将其目录结构改为以下结构：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/projectDirectory.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;其中resources目录中的config文件夹中的文件和WEB-INF文件夹下的web.xml，
以及build.gradle都是自己进行配置的。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;配置文件&lt;/h4&gt;

&lt;h6 id=&quot;generatorconfigxml&quot;&gt;1. generatorConfig.xml&lt;/h6&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE generatorConfiguration
        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;
        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;generatorConfiguration&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;classPathEntry&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;location=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${jarDirection}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;context&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;mysql&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;targetRuntime=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;MyBatis3&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;jdbcConnection&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;driverClass=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${driverClass}&quot;&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;connectionURL=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${connectionURL}&quot;&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;userId=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${userId}&quot;&lt;/span&gt;
                        &lt;span class=&quot;na&quot;&gt;password=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${password}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/jdbcConnection&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;javaTypeResolver&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;forceBigDecimals&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;false&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/javaTypeResolver&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;javaModelGenerator&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;targetPackage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${modelPackage}&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;targetProject=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${src_main_java}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;enableSubPackages&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;trimStrings&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/javaModelGenerator&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;sqlMapGenerator&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;targetPackage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${sqlMapperPackage}&quot;&lt;/span&gt;  
        &lt;span class=&quot;na&quot;&gt;targetProject=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${src_main_java}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;enableSubPackages&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/sqlMapGenerator&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;nt&quot;&gt;&amp;lt;javaClientGenerator&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;XMLMAPPER&quot;&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;targetPackage=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${mapperPackage}&quot;&lt;/span&gt;  
        &lt;span class=&quot;na&quot;&gt;targetProject=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;${src_main_java}&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;enableSubPackages&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;true&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/javaClientGenerator&amp;gt;&lt;/span&gt;

        &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 每一个数据库表都需要建立一个对应的table字段 --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;table&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;schema=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;tableName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;user&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;domainObjectName=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- &amp;lt;property name=&quot;useActualColumnNames&quot; value=&quot;true&quot;/&amp;gt;
            &amp;lt;generatedKey column=&quot;ID&quot; sqlStatement=&quot;DB2&quot; identity=&quot;true&quot; /&amp;gt;
            &amp;lt;columnOverride column=&quot;DATE_FIELD&quot; property=&quot;startDate&quot; /&amp;gt;
            &amp;lt;ignoreColumn column=&quot;FRED&quot; /&amp;gt;
            &amp;lt;columnOverride column=&quot;LONG_VARCHAR_FIELD&quot; jdbcType=&quot;VARCHAR&quot; /&amp;gt; --&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/table&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/context&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/generatorConfiguration&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h6 id=&quot;gradleproperties&quot;&gt;2. gradle.properties&lt;/h6&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 生成的model类所在包
modelPackage=cn.edu.bupt.wen.model
# 生成的mapper接口类所在包
mapperPackage=cn.edu.bupt.wen.mapper
# 生成的mapper xml文件所在包
sqlMapperPackage=cn.edu.bupt.wen.mybatis_mapper
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h6 id=&quot;jdbc-mysqlproperties&quot;&gt;3. jdbc-mysql.properties&lt;/h6&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 将jdbc.jarDirection后的内容更改为gradle下载的
# mysql-connector-java-5.1.x.jar所在的路径，gradle自动下载的路径如下所示
jdbc.jarDirection=/Users/wenzhiquan/.gradle/caches/modules-2/files-2.1/mysql
/mysql-connector-java/5.1.38/dbbd7cd309ce167ec8367de4e41c63c2c8593cc5
/mysql-connector-java-5.1.38.jar
jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://localhost:3306/bookbest
jdbc.user=root
jdbc.pass=root
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h6 id=&quot;spring-mvcxml&quot;&gt;4. spring-mvc.xml&lt;/h6&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;beans&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/beans&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:context=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/context&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xmlns:mvc=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/mvc&quot;&lt;/span&gt;
       &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.springframework.org/schema/beans&lt;/span&gt;
       &lt;span class=&quot;err&quot;&gt;http://www.springframework.org/schema/beans/spring-beans.xsd&lt;/span&gt;
       &lt;span class=&quot;err&quot;&gt;http://www.springframework.org/schema/context&lt;/span&gt;
       &lt;span class=&quot;err&quot;&gt;http://www.springframework.org/schema/context/spring-context.xsd&lt;/span&gt;
       &lt;span class=&quot;err&quot;&gt;http://www.springframework.org/schema/mvc&lt;/span&gt;
       &lt;span class=&quot;err&quot;&gt;http://www.springframework.org/schema/mvc/spring-mvc.xsd&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 自动扫描控制器 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;context:component-scan&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;base-package=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cn.edu.bupt.wen&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 视图渲染 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;bean&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;internalResourceViewResolver&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;org.springframework.web.servlet.view.InternalResourceViewResolver&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;prefix&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/WEB-INF/views/&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;property&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;suffix&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;.jsp&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/bean&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 控制器映射器和控制器适配器 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;mvc:annotation-driven&amp;gt;&amp;lt;/mvc:annotation-driven&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- 静态资源映射器 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;mvc:resources&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mapping=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/statics/**&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;location=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/WEB-INF/statics/&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/beans&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h6 id=&quot;webxml&quot;&gt;5. web.xml&lt;/h6&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;web-app&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://java.sun.com/xml/ns/javaee&quot;&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://java.sun.com/xml/ns/javaee&lt;/span&gt;
		  &lt;span class=&quot;err&quot;&gt;http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&quot;&lt;/span&gt;
         &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;3.0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;index-dispather&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-class&amp;gt;&lt;/span&gt;org.springframework.web.servlet.DispatcherServlet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-class&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;init-param&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-name&amp;gt;&lt;/span&gt;contextConfigLocation&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-name&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;lt;param-value&amp;gt;&lt;/span&gt;classpath*:config/spring/spring-mvc.xml&lt;span class=&quot;nt&quot;&gt;&amp;lt;/param-value&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;/init-param&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-mapping&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;servlet-name&amp;gt;&lt;/span&gt;index-dispather&lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-name&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;url-pattern&amp;gt;&lt;/span&gt;/&lt;span class=&quot;nt&quot;&gt;&amp;lt;/url-pattern&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/servlet-mapping&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h6 id=&quot;buildgradle&quot;&gt;6. build.gradle&lt;/h6&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;group &#39;cn.edu.bupt.wen&#39;
version &#39;1.0-SNAPSHOT&#39;

apply plugin: &#39;groovy&#39;
apply plugin: &#39;java&#39;
apply plugin: &#39;war&#39;
apply plugin: &#39;idea&#39;

sourceCompatibility = 1.5

repositories {
    mavenCentral()
}

configurations {
    mybatisGenerator
}

// 读取config文件夹中对应的配置文件
ext{
    def prop = new Properties();
    file(&quot;src/main/resources/config/mybatis/jdbc-mysql.properties&quot;)
    .withInputStream {
        prop.load(it)
    }
    file(&quot;src/main/resources/config/mybatis/gradle.properties&quot;)
    .withInputStream {
        prop.load(it)
    }
    prop.each {
        project.extensions.add(&quot;$it.key&quot;,it.value);
    }
}

// 配置gradle的依赖项
dependencies {
    compile &#39;org.codehaus.groovy:groovy-all:2.3.11&#39;
    compile &#39;jstl:jstl:1.2&#39;
    compile &#39;org.springframework:spring-aop:4.2.4.RELEASE&#39;
    compile &#39;org.springframework:spring-context:4.2.4.RELEASE&#39;
    compile &#39;org.springframework:spring-beans:4.2.4.RELEASE&#39;
    compile &#39;org.springframework:spring-web:4.2.4.RELEASE&#39;
    compile &#39;org.springframework:spring-webmvc:4.2.4.RELEASE&#39;
    compile &#39;org.springframework:spring-tx:4.2.4.RELEASE&#39;
    compile &#39;org.springframework:spring-jdbc:4.2.4.RELEASE&#39;
    compile &#39;org.springframework:spring-test:4.2.4.RELEASE&#39;
    compile &#39;mysql:mysql-connector-java:5.1.38&#39;
    compile &#39;org.mybatis.generator:mybatis-generator-core:1.3.2&#39;
    compile &#39;org.mybatis:mybatis-spring:1.2.3&#39;
    compile &#39;org.mybatis:mybatis:3.3.0&#39;
    compile &#39;junit:junit:4.12&#39;


    mybatisGenerator &#39;org.mybatis.generator:mybatis-generator-core:1.3.2&#39;
    mybatisGenerator &#39;mysql:mysql-connector-java:5.1.38&#39;

    testCompile group: &#39;junit&#39;, name: &#39;junit&#39;, version: &#39;4.11&#39;
}

// 利用ant创建一个自动生成MyBatis目录文件的task
task mybatisGenerate &amp;lt;&amp;lt; {
    ant.properties[&#39;targetProject&#39;] = projectDir.path
    ant.properties[&#39;jarDirection&#39;] = project[&#39;jdbc.jarDirection&#39;]
    ant.properties[&#39;driverClass&#39;] = project[&#39;jdbc.driverClassName&#39;]
    ant.properties[&#39;connectionURL&#39;] = project[&#39;jdbc.url&#39;]
    ant.properties[&#39;userId&#39;] = project[&#39;jdbc.user&#39;]
    ant.properties[&#39;password&#39;] = project[&#39;jdbc.pass&#39;]
    ant.properties[&#39;src_main_java&#39;] = sourceSets.main.java.srcDirs[0].path
    ant.properties[&#39;src_main_resources&#39;] = sourceSets.main.resources.srcDirs[0].path
    ant.properties[&#39;modelPackage&#39;] = project[&#39;modelPackage&#39;]
    ant.properties[&#39;mapperPackage&#39;] = project[&#39;mapperPackage&#39;]
    ant.properties[&#39;sqlMapperPackage&#39;] = project[&#39;sqlMapperPackage&#39;]

    ant.taskdef(
            name: &#39;mbgenerator&#39;,
            classname: &#39;org.mybatis.generator.ant.GeneratorAntTask&#39;,
            classpath: configurations.mybatisGenerator.asPath
    )

    ant.mbgenerator(overwrite: true,
            configfile: &#39;src/main/resources/config/mybatis/generatorConfig.xml&#39;,
            verbose: true) {
        propertyset {
            propertyref(name: &#39;targetProject&#39;)
            propertyref(name: &#39;jarDirection&#39;)
            propertyref(name: &#39;userId&#39;)
            propertyref(name: &#39;driverClass&#39;)
            propertyref(name: &#39;connectionURL&#39;)
            propertyref(name: &#39;password&#39;)
            propertyref(name: &#39;src_main_java&#39;)
            propertyref(name: &#39;src_main_resources&#39;)
            propertyref(name: &#39;modelPackage&#39;)
            propertyref(name: &#39;mapperPackage&#39;)
            propertyref(name: &#39;sqlMapperPackage&#39;)
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;gradle&quot;&gt;下载gradle依赖包&lt;/h4&gt;

&lt;p&gt;至此，基本的配置就完成了，接下来就需要运行gradle下载相应的依赖包了，
操作如下：打开&lt;code class=&quot;highlighter-rouge&quot;&gt;IDEA &amp;gt; View &amp;gt; Tool Windows &amp;gt; gradle&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/runGradle.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击图中的按钮，IDEA就会自动下载依赖包了。&lt;/p&gt;

&lt;p&gt;下载完成后，目录下的&lt;code class=&quot;highlighter-rouge&quot;&gt;External Libraries&lt;/code&gt;文件夹会生成相应的目录：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/gradleDownload.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;下载完依赖包之后，整体的配置基本上就完成了。&lt;/p&gt;

&lt;h3 id=&quot;tomcat&quot;&gt;3. 部署到Tomcat服务器&lt;/h3&gt;

&lt;p&gt;打开&lt;code class=&quot;highlighter-rouge&quot;&gt;IDEA &amp;gt; Run &amp;gt; Edit Configurations...&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/tomcatConf.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击tomcat server的local选项，点击右上角的&lt;code class=&quot;highlighter-rouge&quot;&gt;configure...&lt;/code&gt;，
在弹出的对话框中选中下载的Tomcat根目录：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/tomcatHome.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;然后将配置好的tomcat添加到运行库当中：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/addTomcat.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;4. 编写代码并运行&lt;/h3&gt;

&lt;h5 id=&quot;controller&quot;&gt;编写controller代码&lt;/h5&gt;

&lt;p&gt;在controller文件夹中创建&lt;code class=&quot;highlighter-rouge&quot;&gt;IndexController&lt;/code&gt;文件，将代码修改为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;package cn.edu.bupt.wen.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
/**
 * Author wenzhiquan
 * Created on 16/4/12 下午12:25
 * File name: IndexController.java
 * Description: null
 */

@Controller
public class IndexController {

    @RequestMapping(&quot;/&quot;)
    public String index(){
        return &quot;index&quot;;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;indexjsp&quot;&gt;修改index.jsp&lt;/h5&gt;

&lt;p&gt;将index.jsp文件修改为自己想要的样式：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%--
  Created by IntelliJ IDEA.
  User: wenzhiquan
  Date: 16/4/12
  Time: 下午12:23
  To change this template use File | Settings | File Templates.
--%&amp;gt;
&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&amp;gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Index&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
  Hello World!
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;tomcat-1&quot;&gt;运行Tomcat&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/runTomcat.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击运行按钮，服务器启动后会自动启动浏览器进入主界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/indexJsp.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，hello world程序已经完成。&lt;/p&gt;

&lt;h3 id=&quot;mybatis&quot;&gt;5. 自动生成mybatis相关文件&lt;/h3&gt;

&lt;p&gt;进入&lt;code class=&quot;highlighter-rouge&quot;&gt;gradle&lt;/code&gt;的view，点击创建&lt;code class=&quot;highlighter-rouge&quot;&gt;gradle&lt;/code&gt;任务：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/mybatisGen.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建一个mybatisGenerate任务：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/mybatisGenRun.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;点击OK，会在&lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;mapper&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;mybatis_mapper&lt;/code&gt;文件夹中自动生成相应的文件：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/idea_gradle_ssm/afterMybatisGen.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，Spring MVC + MyBatis的Java Web开发环境配置完成。&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Apr 2016 20:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/04/12/idea_gradle_ssm/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/04/12/idea_gradle_ssm/</guid>
        
        <category>Java</category>
        
        <category>Web</category>
        
        
      </item>
    
  </channel>
</rss>
