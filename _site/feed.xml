<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DavidWang&#39;s Blog</title>
    <description>爱唱歌健身的程序员 | 王伟达，Web &amp; algorithm Lover，Server Enginee | 这里是 @王伟达 的个人博客，期待和你一起学习成长。</description>
    <link>http://DavidWangTM.github.io/</link>
    <atom:link href="http://DavidWangTM.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 07 Sep 2016 15:06:59 +0800</pubDate>
    <lastBuildDate>Wed, 07 Sep 2016 15:06:59 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Acitivemq 安装及配置</title>
        <description>&lt;h2 id=&quot;macacitivemq&quot;&gt;MAC系统安装acitivemq&lt;/h2&gt;

&lt;h3 id=&quot;section&quot;&gt;安装&lt;/h3&gt;

&lt;p&gt;官方推荐使用brew安装，前提是Mac要先安装brew，也可以手动下载压缩包解压安装，如果已经安装了brew很简单，只需要下面一句话，安装位置：/usr/local/Cellar/activemq/5.13.3&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install apache-activemq
$ cd /usr/local/Cellar/activemq/5.13.3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看信息:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ bin/activemq
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;配置activemq运行环境，默认路径/etc/default/activemq 或 /Users/user/.activemqrc&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;activemq setup /Users/apple/.activemqrc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;activemq官方建议设置访问权限，这一步是可选的：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$chown &#39;apple&#39;:nogroup &#39;/Users/apple/.activemqrc&#39;
$chmod 600 &#39;/Users/apple/.activemqrc&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;启动&lt;/h3&gt;

&lt;p&gt;前台启动：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ activemq console   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;后台启动：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ activemq start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;指定运行日志输出到指定文件启动：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ activemq start &amp;gt; /tmp/smlog  2&amp;gt;&amp;amp;1 &amp;amp; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看是否启动成功，查看端口61616是否运行成功：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ netstat -an|grep 61616
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;或者浏览器访问activemq管理控制台：&lt;a href=&quot;http://localhost:8161/admin/&quot;&gt;http://localhost:8161/admin/&lt;/a&gt;，用户名和密码为&lt;code class=&quot;highlighter-rouge&quot;&gt;admin:admin&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;停止&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ activemq stop
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;或者：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ps -ef|grep activemq
$ kill -9 pid
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-3&quot;&gt;其他资料&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;activemq使用文档：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://activemq.apache.org/using-activemq-5.html&quot;&gt;http://activemq.apache.org/using-activemq-5.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;activemq jndi支持：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://activemq.apache.org/jndi-support.html&quot;&gt;http://activemq.apache.org/jndi-support.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;activemq spring支持：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://activemq.apache.org/spring-support.html&quot;&gt;http://activemq.apache.org/spring-support.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;使用spring JMS：&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://docs.spring.io/spring/docs/2.5.x/reference/jms.html#jms-mdp&quot;&gt;http://docs.spring.io/spring/docs/2.5.x/reference/jms.html#jms-mdp&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 03 Sep 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/09/03/mac_acitivemq_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/09/03/mac_acitivemq_introduction/</guid>
        
        <category>Mac</category>
        
        <category>Acitivemq</category>
        
        
      </item>
    
      <item>
        <title>Zookeeper 安装及配置</title>
        <description>&lt;h3 id=&quot;zookeeper-&quot;&gt;Zookeeper 的安装&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;下载地址：http://www.apache.org/dyn/closer.cgi/zookeeper
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;解压文件：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tar zxvf zookeeper-3.4.8.tar.gz
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;zookeeper--1&quot;&gt;Zookeeper 的配置&lt;/h3&gt;

&lt;h4 id=&quot;section&quot;&gt;一、单机模式&lt;/h4&gt;

&lt;h5 id=&quot;section-1&quot;&gt;1.1、编辑配置文件&lt;/h5&gt;
&lt;p&gt;在“zookeeper-3.4.8”目录下，新建一个名为”data”和”logs”的文件，其中内容如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir data
mkdir logs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tickTime=2000  
dataDir= /usr/local/zookeeper-3.4.8/data  (填写自己的data目录)  
dataLogDir=/usr/local/zookeeper-3.4.8/logs  
clientPort=2181
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;参数说明:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#tickTime: zookeeper中使用的基本时间单位, 毫秒值.
#dataDir: 数据目录. 可以是任意目录.
#dataLogDir: log目录, 同样可以是任意目录. 如果没有设置该参数, 将使用和#dataDir相同的设置.
#clientPort: 监听client连接的端口号.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;zookeeper-server&quot;&gt;1.2、运行ZooKeeper Server&lt;/h5&gt;

&lt;p&gt;执行./bin/zkServer.sh start命令，运行ZooKeeper Server进程，得到如图所示结果，表示后台运行ZooKeeper Server进程成功。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/java_introduction/cmd_start.png&quot; alt=&quot;IMG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注:命令telnet 127.0.0.1 2181 连接成功验证Zookeeper 是否启动成功
停止：./bin/zkServer.sh stop
也可以执行bin/zkServer.sh start-foreground命令，非后台运行ZooKeeper Server进程&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/java_introduction/cmd_foreground.png&quot; alt=&quot;IMG&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;二、集群模式&lt;/h4&gt;

&lt;p&gt;集群模式有两种形式：
1）使用多台机器，在每台机器上运行一个ZooKeeper Server进程；
2）使用一台机器，在该台机器上运行多个ZooKeeper Server进程。
在生产环境中，一般使用第一种形式，在练习环境中，一般使用第二种形式。&lt;/p&gt;

&lt;h5 id=&quot;section-3&quot;&gt;2.1、参数配置&lt;/h5&gt;

&lt;p&gt;集群模式下，需要配置一些参数，以下是常见的一些参数。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;data目录,用于存放进程运行数据。&lt;/li&gt;
  &lt;li&gt;data目录下的myid文件,用于存储一个数值，用来作为该ZooKeeper Server进程的标识。&lt;/li&gt;
  &lt;li&gt;监听Client端请求的端口号&lt;/li&gt;
  &lt;li&gt;监听同ZooKeeper集群内其他Server进程通信请求的端口号&lt;/li&gt;
  &lt;li&gt;监听ZooKeeper集群内“leader”选举请求的端口号,该端口号用来监听ZooKeeper集群内“leader”选举的请求。注意这个是ZooKeeper集群内“leader”的选举，跟分布式应用程序无关。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;参数配置注意事项：&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;同一个ZooKeeper集群内，不同ZooKeeper Server进程的标识需要不一样，即myid文件内的值需要不一样&lt;/li&gt;
  &lt;li&gt;采用上述第2种形式构建ZooKeeper集群，需要注意“目录，端口号”等资源的不可共享性，如果共享会导致ZooKeeper Server进程不能正常运行，比如“data目录，几个监听端口号”都不能被共享&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//先在zookeeper-3.4.6创建 
mkdir data
mkdir logs
//然后
cp zookeeper-3.4.6 zookeeper-3.4.6_1
cp zookeeper-3.4.6 zookeeper-3.4.6_2
cp zookeeper-3.4.6 zookeeper-3.4.6_3
//分别在3个目录的conf中创建zoo.cfg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;三个zoo.cfg配置如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tickTime=2000
initLimit=10
syncLimit=5
dataDir=/usr/local/zookeeper-3.4.6_1/data
dataLogDir=/usr/local/zookeeper-3.4.6_1/logs
clientPort=2181

server.1=192.168.1.106:2881:3881
server.2=192.168.1.106:2882:3882
server.3=192.168.1.106:2883:3883

tickTime=2000
initLimit=10
syncLimit=5
dataDir=/usr/local/zookeeper-3.4.6_2/data
dataLogDir=/usr/local/zookeeper-3.4.6_2/logs
clientPort=2182

server.1=192.168.1.106:2881:3881
server.2=192.168.1.106:2882:3882
server.3=192.168.1.106:2883:3883

tickTime=2000
initLimit=10
syncLimit=5
dataDir=/usr/local/zookeeper-3.4.6_3/data
dataLogDir=/usr/local/zookeeper-3.4.6_3/logs
clientPort=2183

server.1=192.168.1.106:2881:3881
server.2=192.168.1.106:2882:3882
server.3=192.168.1.106:2883:3883
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;参数说明:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tickTime=2000
tickTime这个时间是作为 Zookeeper 服务器之间或客户端与服务器之间维持心跳的时间间隔,也就是每个tickTime时间就会发送一个心跳。

initLimit=10
initLimit这个配置项是用来配置Zookeeper接受客户端（这里所说的客户端不是用户连接Zookeeper 服务器的客户端,而是Zookeeper服务器集群中连接到Leader的Follower 服务器）初始化连接时最长 能忍受多少个心跳时间间隔数。当已经超过 10 个心跳的时间（也就是 tickTime）长度后 Zookeeper 服务器还没有收到客户端的返回信息,那么表明这个客户端连接失败。总的时间长度就是 10*2000=20 秒。

syncLimit=5
syncLimit 这个配置项标识Leader与Follower之间发送消息,请求和应答时间长度,最长不能超过多少个tickTime的时间长度,总的时间长度就是5*2000=10秒。

dataDir=/usr/local/zookeeper-3.4.6_(x)/data
dataDir顾名思义就是Zookeeper保存数据的目录,默认情况下Zookeeper将写数据的日志文件也保存在这个目录里。

clientPort=2181
clientPort这个端口就是客户端（应用程序）连接Zookeeper服务器的端口,Zookeeper 会监听这个端 口接受客户端的访问请求。

server.A=B：C：D
server.1=192.168.1.106:2881:3881
server.2=192.168.1.106:2882:3882
server.3=192.168.1.106:2883:3883
A 是一个数字,表示这个是第几号服务器；
B 是这个服务器的IP地址（或者是与IP地址做了映射的主机名）；
C 第一个端口用来集群成员的信息交换,表示这个服务器与集群中的 Leader 服务器交换信息的端口；
D 是在leader挂掉时专门用来进行选举 leader 所用的端口。
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在data目录下创建myid,如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vi /usr/local/zookeeper-3.4.6_1 /data/myid 设置值为1
$ vi /usr/local/zookeeper-3.4.6_2 /data/myid 设置值为2
$ vi /usr/local/zookeeper-3.4.6_3 /data/myid 设置值值为3
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;zookeeper&quot;&gt;2.2、启动并查看zookeeper:&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ /usr/local/zookeeper-3.4.6_x/bin/zkServer.sh start
$ /usr/local/zookeeper-3.4.6_x/bin/zkServer.sh status
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-4&quot;&gt;2.3、另外的配置方法&lt;/h5&gt;

&lt;p&gt;在zookeeper-3.4.6中创建/wx/data,如下:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;myid&lt;/td&gt;
      &lt;td&gt;Data目录&lt;/td&gt;
      &lt;td&gt;Client&lt;/td&gt;
      &lt;td&gt;Server&lt;/td&gt;
      &lt;td&gt;Leader&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;/w1/data&lt;/td&gt;
      &lt;td&gt;2181&lt;/td&gt;
      &lt;td&gt;2881&lt;/td&gt;
      &lt;td&gt;3881&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;/w2/data&lt;/td&gt;
      &lt;td&gt;2182&lt;/td&gt;
      &lt;td&gt;2882&lt;/td&gt;
      &lt;td&gt;3882&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;/w3/data&lt;/td&gt;
      &lt;td&gt;2183&lt;/td&gt;
      &lt;td&gt;2883&lt;/td&gt;
      &lt;td&gt;3883&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;配置如下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# zx.cfg  
tickTime=2000  
initLimit=10  
syncLimit=2  
dataDir=/usr/myenv/zookeeper-3.4.6/wx/data  
clientPort=218x  
# server.x中的“x”表示ZooKeeper Server进程的标识  
server.1=192.168.1.106:2881:3881 
server.2=192.168.1.106:2882:3882 
server.3=192.168.1.106:2883:3883
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行如下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bin/zkServer.sh start deploy/w1/w1.cfg，  
bin/zkServer.sh start deploy/w2/w2.cfg  
bin/zkServer.sh start deploy/w3/w3.cfg
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Fri, 02 Sep 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/09/02/mac_zookeeper_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/09/02/mac_zookeeper_introduction/</guid>
        
        <category>Mac</category>
        
        <category>Zookeeper</category>
        
        
      </item>
    
      <item>
        <title>Ubuntu 操作篇二</title>
        <description>&lt;h3 id=&quot;ubuntu-packages&quot;&gt;从Ubuntu packages安装&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;但是此时安装的nginx版本老旧，并且无法安装第三方扩展。但是大多数linux发行版支持更新最新的安装包。&lt;/p&gt;

&lt;p&gt;1.首先获取nginx认证钥匙以便包管理器认证nginx包&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget http://nginx.org/keys/nginx_signing.key
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2.用apt-key命令添加下载的钥匙&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-key add nginx_signing.key
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3.获取发行版的codename&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsb_release -a
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;No LSB modules are available.

Distributor ID:	Ubuntu

Description:	Ubuntu 16.04 LTS

Release:	16.04

Codename:	trusty
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4.打开/etc/apt/sources.list,添加命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deb http://nginx.org/packages/ubuntu/ codename nginx

deb-src http://nginx.org/packages/ubuntu/ codename nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;codename是第三步得到的。&lt;/p&gt;

&lt;p&gt;5.更新apt-get，并安装nginx&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update

sudo apt-get install nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;安装完成之后用nginx -V查看一下吧。&lt;/p&gt;

</description>
        <pubDate>Thu, 01 Sep 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/09/01/ubuntu_nginx_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/09/01/ubuntu_nginx_introduction/</guid>
        
        <category>Ubuntu</category>
        
        <category>Nginx</category>
        
        
      </item>
    
      <item>
        <title>Nginx 操作篇</title>
        <description>&lt;h3 id=&quot;nginx&quot;&gt;重点介绍nginx配置&lt;/h3&gt;

&lt;p&gt;在上篇中，安装成功后，会有 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/nginx&lt;/code&gt; 目录，在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/nginx&lt;/code&gt; 目录中找到 &lt;code class=&quot;highlighter-rouge&quot;&gt;nginx.conf&lt;/code&gt;.使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;vi nginx.conf&lt;/code&gt; 打开文件。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user  nginx;
#操作线程数
worker_processes  1;

#引用目录地址
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

#单个线程最大连接数
events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;
                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;
                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

	 #超时时间
	 client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;
    #gzip  on;
	
	 #我们需要配置目录
    include /etc/nginx/conf.d/*.conf;
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;操作 &lt;code class=&quot;highlighter-rouge&quot;&gt;vi /etc/nginx/conf.d/deault.conf&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;upstream site {
    server 127.0.0.1:8080 weight=1;
    }

server {
    listen       90;
    server_name  localhost;

    #charset koi8-r;
    #access_log  /var/log/nginx/log/host.access.log  main;
	#静态资源截获
    location ~* ^.+\.(ico|gif|jpg|jpeg|png|html|htm)$ {
        root         /usr/share/nginx/XXX;
        access_log   /var/log/nginx/access.log;
        expires      30d;
    }

	#静态资源截获
    location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
        root         /usr/share/nginx/XXX;
        access_log   /var/log/nginx/access.log;
        expires      24h;
    }

	
    location / {
        proxy_pass      http://site;
        proxy_set_header        Host            $host;
        proxy_set_header        X-Forwarded-For         $remote_addr;
    }

    gzip on;
    gzip_comp_level 2;
    gzip_min_length  1000;
    gzip_buffers    4 8k;
    gzip_types      text/plain application/javascript text/css text/xml application/x-httpd-php;
    output_buffers  1 32k; 
    postpone_output  1460;
          
         
    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    # 
    error_page   500 502 503 504  /50x.html;
    location = /50x.html { 
        root   /usr/share/nginx/html; 
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache&#39;s document root
    # concurs with nginx&#39;s one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;location&quot;&gt;重点讲解下：location语法规则&lt;/h3&gt;
&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt; 开头表示精确匹配&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;^~&lt;/code&gt; 开头表示uri以某个常规字符串开头，理解为匹配 url路径即可。nginx不对url做编码。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; 开头表示区分大小写的正则匹配&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;~*&lt;/code&gt;  开头表示不区分大小写的正则匹配&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;!~&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;!~*&lt;/code&gt; 分别为区分大小写不匹配及不区分大小写不匹配 的正则&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 通用匹配，任何请求都会匹配到。&lt;/p&gt;

&lt;p&gt;多个location配置的情况下匹配顺序为：&lt;/p&gt;

&lt;p&gt;首先匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;，其次匹配 &lt;code class=&quot;highlighter-rouge&quot;&gt;^~&lt;/code&gt; , 其次是按文件中顺序的正则匹配，最后是交给 &lt;code class=&quot;highlighter-rouge&quot;&gt;/&lt;/code&gt; 通用匹配。当有匹配成功时候，停止匹配，按当前匹配规则处理请求。&lt;/p&gt;

&lt;h3 id=&quot;redirect&quot;&gt;Redirect语法&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    listen 90;
    server_name localhost;
    index index.html index.php;
    root html;
    if ($http_host !~ “^star\.igrow\.cn$&amp;amp;quot {
        rewrite ^(.*) http://XXX.cn$1 redirect;
    }
}

#放盗链
location ~* \.(gif|jpg|swf)$ {
    valid_referers none blocked XX.cn XXX.cn;
    if ($invalid_referer) {
        rewrite ^/ http://$host/logo.png;
    }
}

#过期时间
location ~* \.(js|css|jpg|jpeg|gif|png|swf)$ {
    if (-f $request_filename) {
        expires 1h;
        break;
    }
}

#禁止访问某个目录
location ~* \.(txt|doc)${
    root /usr/share/nginx/XXX;
    deny all;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;一些可用的全局变量:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$args $content_length $content_type $document_root
$document_uri $host $http_user_agent
$http_cookie $limit_rate $request_body_file
$request_method $remote_addr $remote_port
$remote_user $request_filename $request_uri
$query_string $scheme $server_protocol
$server_addr $server_name $server_port
$uri
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;rewrite&quot;&gt;ReWrite语法&lt;/h3&gt;

&lt;p&gt;三、ReWrite语法&lt;/p&gt;

&lt;p&gt;last – 基本上都用这个Flag。&lt;/p&gt;

&lt;p&gt;break – 中止Rewirte，不在继续匹配&lt;/p&gt;

&lt;p&gt;redirect – 返回临时重定向的HTTP状态302&lt;/p&gt;

&lt;p&gt;permanent – 返回永久重定向的HTTP状态301&lt;/p&gt;

&lt;p&gt;1、下面是可以用来判断的表达式：&lt;/p&gt;

&lt;p&gt;-f和!-f用来判断是否存在文件&lt;/p&gt;

&lt;p&gt;-d和!-d用来判断是否存在目录&lt;/p&gt;

&lt;p&gt;-e和!-e用来判断是否存在文件或目录&lt;/p&gt;

&lt;p&gt;-x和!-x用来判断文件是否可执行&lt;/p&gt;

&lt;p&gt;2、下面是可以用作判断的全局变量&lt;/p&gt;

&lt;p&gt;例：http://localhost:88/test1/test2/test.php&lt;/p&gt;

&lt;p&gt;$host：localhost&lt;/p&gt;

&lt;p&gt;$server_port：88&lt;/p&gt;

&lt;p&gt;$request_uri：http://localhost:88/test1/test2/test.php&lt;/p&gt;

&lt;p&gt;$document_uri：/test1/test2/test.php&lt;/p&gt;

&lt;p&gt;$document_root：D:\nginx/html&lt;/p&gt;

&lt;p&gt;$request_filename：D:\nginx/html/test1/test2/test.php&lt;/p&gt;
</description>
        <pubDate>Sun, 28 Aug 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/08/28/ubuntu_nginx1_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/08/28/ubuntu_nginx1_introduction/</guid>
        
        <category>Ubuntu</category>
        
        <category>Nginx</category>
        
        
      </item>
    
      <item>
        <title>Ubuntu 操作篇</title>
        <description>&lt;h2 id=&quot;ubuntu-1404redis&quot;&gt;ubuntu 14.04下的redis安装配置&lt;/h2&gt;

&lt;h3 id=&quot;section&quot;&gt;安装&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install redis-server
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;redis&quot;&gt;检查redis系统进程&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ps -aux|grep redis
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;redis-1&quot;&gt;redis服务器状态检查&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo /etc/init.d/redis-server status
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;或&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -nlt|grep 6379
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;redis-2&quot;&gt;通过终端访问redis&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis-cli
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;redis-3&quot;&gt;重启redis&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo /etc/init.d/redis-server restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;redis-4&quot;&gt;配置redis&lt;/h3&gt;

&lt;p&gt;默认情况下，redis的访问是不需要账号和密码的。&lt;/p&gt;

&lt;p&gt;要增加账号和密码，可以通过修改配置文件实现。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/redis/redis.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;取消掉注释&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#取消注释requirepass
requirepass xxxx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;重启redis服务器&lt;/p&gt;

&lt;p&gt;带密码登录&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis-cli -a xxx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;redis-5&quot;&gt;访问远程redis服务器&lt;/h3&gt;

&lt;p&gt;注：默认情况下，redis服务器仅能本地方位。远程访问需注释掉配置文件中的“bind”项。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;redis-cli -a xxx -h 192.168.1.200
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Fri, 26 Aug 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/08/26/ubuntu_redis_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/08/26/ubuntu_redis_introduction/</guid>
        
        <category>Ubuntu</category>
        
        <category>Redis</category>
        
        
      </item>
    
      <item>
        <title>SSM框架 shiro篇</title>
        <description>&lt;p&gt;Shiro    提供了 JSP 的一套 JSTL 标签，用于做 JSP   页面做权限控制的。可以控制一些按钮和一些超链接，或者一些显示内容。&lt;/p&gt;

&lt;p&gt;不过引入有区分，JSP需要在头部引入， Shiro  提供的TLD 文件:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;%@taglib prefix=&quot;shiro&quot; uri=&quot;http://shiro.apache.org/tags&quot; %&amp;gt;  
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;下面是具体的标签用法：&lt;/p&gt;

&lt;h3 id=&quot;guest&quot;&gt;1.guest（游客）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;shiro:guest&amp;gt;  
您当前是游客，&amp;lt;a href=&quot;javascript:void(0);&quot; class=&quot;dropdown-toggle qqlogin&quot; &amp;gt;登录&amp;lt;/a&amp;gt;
&amp;lt;/shiro:guest&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;user&quot;&gt;2.user（已经登录，或者记住我登录）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;shiro:user&amp;gt;  
欢迎[&amp;lt;shiro:principal/&amp;gt;]登录，&amp;lt;a href=&quot;/logout.shtml&quot;&amp;gt;退出&amp;lt;/a&amp;gt;  
&amp;lt;/shiro:user&amp;gt;   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;authenticated&quot;&gt;3.authenticated（已经认证，排除记住我登录的）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;shiro:authenticated&amp;gt;  
	用户[&amp;lt;shiro:principal/&amp;gt;]已身份验证通过  
&amp;lt;/shiro:authenticated&amp;gt;   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;notauthenticatedauthenticated&quot;&gt;4.notAuthenticated（和authenticated相反）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;shiro:notAuthenticated&amp;gt;
	当前身份未认证（包括记住我登录的）
&amp;lt;/shiro:notAuthenticated&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;这个功能主要用途，识别是不是本次操作登录过的，比如支付系统，进入系统可以用记住我的登录信息，但是当要关键操作的时候，需要进行认证识别。&lt;/p&gt;

&lt;h3 id=&quot;principal&quot;&gt;5.principal标签，比较常用。&lt;/h3&gt;

&lt;p&gt;principal 标签，取值取的是你登录的时候。在Realm 实现类中的如下代码：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;....
return new SimpleAuthenticationInfo(user,user.getPswd(), getName());
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在new SimpleAuthenticationInfo(第一个参数,….) 的第一个参数放的如果是一个username ，那么就可以直接用。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!--取到username--&amp;gt;
&amp;lt;shiro: principal/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果第一个参数放的是对象，比如我喜欢放User 对象。那么如果要取username 字段。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;!--需要指定property--&amp;gt;
&amp;lt;shiro:principal property=&quot;username&quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;和下面 Java  代码一致&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User user = (User)SecurityUtils.getSubject().getPrincipals();
String username = user.getUsername();
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;hasrole&quot;&gt;6.hasRole标签（判断是否拥有这个角色）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;shiro:hasRole name=&quot;admin&quot;&amp;gt;  
	用户[&amp;lt;shiro:principal/&amp;gt;]拥有角色admin&amp;lt;br/&amp;gt;  
&amp;lt;/shiro:hasRole&amp;gt;   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;hasanyroles&quot;&gt;7.hasAnyRoles标签（判断是否拥有这些角色的其中一个）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;shiro:hasAnyRoles name=&quot;admin,user,member&quot;&amp;gt;  
用户[&amp;lt;shiro:principal/&amp;gt;]拥有角色admin或user或member&amp;lt;br/&amp;gt;  
&amp;lt;/shiro:hasAnyRoles&amp;gt;   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;lacksrole&quot;&gt;8.lacksRole标签（判断是否不拥有这个角色）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;shiro:lacksRole name=&quot;admin&quot;&amp;gt;  
用户[&amp;lt;shiro:principal/&amp;gt;]不拥有admin角色
&amp;lt;/shiro:lacksRole&amp;gt;   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;haspermission&quot;&gt;9.hasPermission标签（判断是否有拥有这个权限）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;shiro:hasPermission name=&quot;user:add&quot;&amp;gt;  
	用户[&amp;lt;shiro:principal/&amp;gt;]拥有user:add权限
&amp;lt;/shiro:hasPermission&amp;gt;   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;lackspermission&quot;&gt;10.lacksPermission标签（判断是否没有这个权限）&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;shiro:lacksPermission name=&quot;user:add&quot;&amp;gt;  
	用户[&amp;lt;shiro:principal/&amp;gt;]不拥有user:add权限
&amp;lt;/shiro:lacksPermission&amp;gt;   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Tue, 02 Aug 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/08/02/ssm_shiro_jsp_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/08/02/ssm_shiro_jsp_introduction/</guid>
        
        <category>SSM</category>
        
        
      </item>
    
      <item>
        <title>Ubuntu 操作篇</title>
        <description>&lt;h3 id=&quot;root-&quot;&gt;1. 修改 root 密码&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo passwd root
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;2. 以其他账户登录修改内容&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;xxx@ubuntu14:~$ su - root
Password:
root@ubuntu14:~# vi /etc/ssh/sshd_config
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;3. 注释注解&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# Authentication:
LoginGraceTime 120
#PermitRootLogin without-password
PermitRootLogin yes
StrictModes yes
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;ssh&quot;&gt;4. 重启ssh服务&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root@ubuntu14:~# sudo service ssh restart
ssh stop/waiting
ssh start/running, process 1499
root@ubuntu14:~#
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Mon, 01 Aug 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/08/01/ubuntu_root_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/08/01/ubuntu_root_introduction/</guid>
        
        <category>Ubuntu</category>
        
        
      </item>
    
      <item>
        <title>Mac下配置redis</title>
        <description>&lt;h3 id=&quot;mac--redis&quot;&gt;Mac 下安装运行 redis&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mac&lt;/code&gt; 上安装 redis 首先必须保证 &lt;code class=&quot;highlighter-rouge&quot;&gt;mac&lt;/code&gt; 已经安装 &lt;code class=&quot;highlighter-rouge&quot;&gt;xcode&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;redis&quot;&gt;一.下载redis&lt;/h4&gt;

&lt;p&gt;redis下载地址：&lt;a href=&quot;https://code.google.com/archive/p/redis/downloads&quot;&gt;https://code.google.com/archive/p/redis/downloads&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;redis-1&quot;&gt;二.配置redis&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//依次运行
sudo make
sudo make test
sudo make isntall
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;运行完成后，将配置文件移动到/etc目录下.&lt;/p&gt;

&lt;h4 id=&quot;redis-2&quot;&gt;三.启动redis&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/bin/redis-server
//或者
/usr/local/bin/redis-server /etc/redis.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/img/in-post/redis.png&quot; alt=&quot;IMG&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;redis-3&quot;&gt;四.尝试连接redis，进行数据操作&lt;/h4&gt;

&lt;p&gt;进入到&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/bin&lt;/code&gt;目录，输入 &lt;code class=&quot;highlighter-rouge&quot;&gt;./redis-cli&lt;/code&gt;即可进入编辑页面&lt;/p&gt;

&lt;h4 id=&quot;redis-commander&quot;&gt;五.安装redis-commander&lt;/h4&gt;

&lt;p&gt;Redis web-based management tool written in node.js&lt;/p&gt;

&lt;h5 id=&quot;section&quot;&gt;安装和运行&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ npm install -g redis-commander
$ redis-commander
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h5 id=&quot;section-1&quot;&gt;使用&lt;/h5&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ redis-commander --help
Options:
  --redis-port                    The port to find redis on.         [string]
  --redis-host                    The host to find redis on.         [string]
  --redis-socket                  The unix-socket to find redis on.  [string]
  --redis-password                The redis password.                [string]
  --redis-db                      The redis database.                [string]
  --http-auth-username, --http-u  The http authorisation username.   [string]
  --http-auth-password, --http-p  The http authorisation password.   [string]
  --port, -p                      The port to run the server on.     [string]  [default: 8081]
  --address, -a                   The address to run the server on   [string]  [default: 0.0.0.0]
   
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Wed, 20 Jul 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/07/20/mac_redis_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/07/20/mac_redis_introduction/</guid>
        
        <category>Redis</category>
        
        <category>Mac</category>
        
        
      </item>
    
      <item>
        <title>阿里云端口配置</title>
        <description>&lt;h3 id=&quot;section&quot;&gt;阿里云将80端口请求转发到其他端口&lt;/h3&gt;

&lt;h4 id=&quot;section-1&quot;&gt;背景&lt;/h4&gt;
&lt;p&gt;租了一台阿里云ECS，想搭建一个java Web 程序，环境都搭建好后，将Tomcat端口改为80并执行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./startup.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;程序报错端口号冲突。
估计是80端口被占用了，但是想绑定域名，还是需要将80端口映射到tomcat才行。&lt;/p&gt;

&lt;p&gt;于是检查占用80端口的程序&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/aliyun_80.png&quot; alt=&quot;IMG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;是一个叫&lt;code class=&quot;highlighter-rouge&quot;&gt;AliYunDun&lt;/code&gt;的程序将80端口占用了。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;解决方案&lt;/h4&gt;
&lt;p&gt;由于80端口受到各种保护措施，所以一般程序是无法获取80端口的使用权的，要想实现不输入端口号直接访问程序，需要将80端口的请求转发到Tomcat设定的端口上去，也就是默认的8080端口。&lt;/p&gt;

&lt;h4 id=&quot;ip&quot;&gt;首先查看服务器网卡及ip设置：&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/aliyun_ip.png&quot; alt=&quot;IMG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;很明显eth1为外网网卡。&lt;/p&gt;

&lt;h4 id=&quot;section-3&quot;&gt;设置端口号转发规则：&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;iptables -A PREROUTING -t nat -i eth1 -p tcp --dport 80 -j REDIRECT --to-port 8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Mon, 11 Jul 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/07/11/tomcat_80_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/07/11/tomcat_80_introduction/</guid>
        
        <category>Tomcat</category>
        
        
      </item>
    
      <item>
        <title>Tomcat 安装</title>
        <description>&lt;h3 id=&quot;apache-tomcat&quot;&gt;关于 Apache Tomcat&lt;/h3&gt;

&lt;p&gt;Apache Tomcat 是一个服务器应用，通常用来部署 Java 应用到 Web 。 Tomcat 是 Java Servlet 与 JSP 技术的一个开源实现，由 Apache 软件基金会发布。&lt;/p&gt;

&lt;p&gt;这个教程涵盖了在 Ubuntu 14.04 上 Tomcat 7.0.x 版本的安装和基础配置。&lt;/p&gt;

&lt;p&gt;有两种基本的途径来安装 Tomcat 到 Ubuntu 上：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通过 apt-get 工具来安装，这是最简单的方法。&lt;/li&gt;
  &lt;li&gt;从 Apache Tomcat 网站下载二进制发布包。本教程不涵盖这种方法。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在这个教程中，我们将使用最简单地方法： &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get&lt;/code&gt; 。这将从官方的 Ubuntu 资源仓库安装最新的 Tomcat 发布包，这个包可能不是 Tomcat 的最新发布版本。如果你想要确保安装 Tomcat 的最新版，你可以下载最新的二进制发布包。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;步骤一 - 先决条件&lt;/h3&gt;

&lt;p&gt;在你开始这个向导之前，在你的服务器上需要配置一个独立的非 root 用户账号。你可以按照 Ubuntu 14.04 上搭建服务器中的 1-4 步来学习完成它。我们这里使用创建的 &lt;code class=&quot;highlighter-rouge&quot;&gt;demo&lt;/code&gt; 用户来完成后续的教程。&lt;/p&gt;

&lt;h3 id=&quot;tomcat&quot;&gt;步骤二 - 安装 Tomcat&lt;/h3&gt;

&lt;p&gt;首先，你需要升级 apt-get 软件包列表：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;现在你已经准备好安装 Tomcat。运行以下命令，开始安装：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install tomcat7
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;输入 &lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt; 来安装 Tomcat 。这将同时安装 Tomcat 和它的依赖，例如 Java，同时，它将创建一个 &lt;code class=&quot;highlighter-rouge&quot;&gt;tomcat7&lt;/code&gt; 用户，并以默认设置启动 Tomcat 。&lt;/p&gt;

&lt;p&gt;这时候， Tomcat 并没有完全安装完成，但你可以通过在浏览器中输入本地域名或IP地址之后加 :8080 的方法来访问默认页面。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://your_ip_address:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;你会看到一个闪屏页面，显示 “It works” ，和其他附加信息。现在，我们要深入到 Tomcat 的安装过程。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;步骤三 - 安装额外软件包&lt;/h3&gt;

&lt;p&gt;注意：如果你对 Tomcat 足够了解，且不需要 Web 管理接口，文档和示例，那这个章节不是必须的。如果你是第一次接触 Tomcat ，请继续。&lt;/p&gt;

&lt;p&gt;通过以下代码，你将安装 Tomcat 的在线文档， Web接 口（管理 Web 应用），以及一些示例应用。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install tomcat7-docs tomcat7-admin tomcat7-examples
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;输入 &lt;code class=&quot;highlighter-rouge&quot;&gt;yes&lt;/code&gt; 来安装这些软件包。后面我们会讲到这些工具的用法和配置。接下来，我们要安装 JDK 。&lt;/p&gt;

&lt;h3 id=&quot;jdk-&quot;&gt;步骤四 - 安装 JDK (可选)&lt;/h3&gt;

&lt;p&gt;如果你打算在服务器上开发应用，你需要安装本章节中提到的软件。&lt;/p&gt;

&lt;p&gt;JDK 确保我们可以开发运行在 Tomcat 服务器上的 Java 应用。运行以下命令来安装 &lt;code class=&quot;highlighter-rouge&quot;&gt;openjdk-7-jdk&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install default-jdk
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;作为 JDK 的附件， Tomcat 文档上建议同时安装用来构建 Java 应用 Apache Ant 工具及包括 Git 在内的源码控制系统。通过下面的命令来安装它们：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get install ant git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Apache Ant 的更多信息，可查阅&lt;a href=&quot;http://ant.apache.org/manual/index.html&quot;&gt;其官方文档&lt;/a&gt;。 &lt;a href=&quot;https://www.digitalocean.com/community/articles/how-to-use-git-effectively&quot;&gt;Git&lt;/a&gt; 使用教程可以参考这里。&lt;/p&gt;

&lt;h3 id=&quot;tomcat-web-&quot;&gt;步骤五 - 配置 Tomcat Web 管理器&lt;/h3&gt;

&lt;p&gt;想要使用步骤三中安装的 Web 应用管理器，需要先登录到 Tomcat 服务器。首先需要编辑修改 &lt;code class=&quot;highlighter-rouge&quot;&gt;tomcat-users.xml&lt;/code&gt; ：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nano /etc/tomcat7/tomcat-users.xml
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;该文件充满了用于说明如何配置的注释。你需要删除下面两行之间的所有注释。如需要用作参考，则保留。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;tomcat-users&amp;gt;
&amp;lt;/tomcat-users&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;你需要添加一个用户，可以访问 &lt;code class=&quot;highlighter-rouge&quot;&gt;manager-gui&lt;/code&gt; 和 &lt;code class=&quot;highlighter-rouge&quot;&gt;admin-gui&lt;/code&gt; （我们在步骤三种安装的管理界面）。你可以通过如下的配置来定义一个用户。如果需要，确保修改用户名和密码。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;tomcat-users&amp;gt;
	&amp;lt;user username=&quot;admin&quot; password=&quot;password&quot; roles=&quot;manager-gui,admin-gui&quot; /&amp;gt;
&amp;lt;/tomcat-users&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;保存并退出 &lt;code class=&quot;highlighter-rouge&quot;&gt;tomcat-users.xml&lt;/code&gt; 文件。重启 &lt;code class=&quot;highlighter-rouge&quot;&gt;Tomcat&lt;/code&gt; 服务，以便修改配置生效。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo service tomcat7 restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;web-&quot;&gt;步骤六 - 访问 Web 界面&lt;/h3&gt;

&lt;p&gt;现在，我们已经配置了一个管理员用户，从 Web 浏览器访问 Web 管理器页面。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;http://your-ip_address:8080
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;你可以看到的页面如下：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/show.png&quot; alt=&quot;IMG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;从上面可以看到，里面有四个链接到步骤三中安装的软件包：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;tomcat7-docs: Tomcat 的在线文档。通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://your_ip_address:8080/docs/&lt;/code&gt; 来访问&lt;/li&gt;
  &lt;li&gt;tomcat7-examples: Tomcat 7 Servlet 和 JSP 示例。你可以点击这些示例 Web 应用来了解它们是怎么工作的（通过源码可以了解它们是怎么实现的）。通过 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://your_ip_address:8080/examples/&lt;/code&gt; 来访问&lt;/li&gt;
  &lt;li&gt;tomcat7-admin ( Web 应用管理器): Tomcat Web 应用管理器。通过这里来管理你的 Java 应用。&lt;/li&gt;
  &lt;li&gt;tomcat7-admin (主机管理器): Tomcat 虚拟主机管理器。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;通过打开链接 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://your_ip_address:8080/manager/html&lt;/code&gt; ，来查看 Web 应用管理器：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/show1.png&quot; alt=&quot;IMG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个Web应用管理器使用来管理Java应用的。你可以在这里执行应用的启动，停止，重新加载，部署，下架等操作。还可以对应用做一些诊断（如内存泄露）。最后，你服务器的相关信息被显示在页面的最底部。&lt;/p&gt;

&lt;p&gt;通过打开链接 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://your_ip_address:8080/host-manager/html&lt;/code&gt; ，来查看虚拟主机管理器：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/in-post/show3.png&quot; alt=&quot;IMG&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在虚拟主机管理页面，你可以为应用程序添加虚拟主机。&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;结束&lt;/h3&gt;

&lt;p&gt;Tomcat 的安装到此结束。你现在就可以免费得来部署自己的 Web 应用。&lt;/p&gt;

</description>
        <pubDate>Sat, 09 Jul 2016 15:00:00 +0800</pubDate>
        <link>http://DavidWangTM.github.io/2016/07/09/tomcat_install_introduction/</link>
        <guid isPermaLink="true">http://DavidWangTM.github.io/2016/07/09/tomcat_install_introduction/</guid>
        
        <category>Tomcat</category>
        
        <category>Ubuntu</category>
        
        
      </item>
    
  </channel>
</rss>
